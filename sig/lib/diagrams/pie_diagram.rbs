require_relative 'base'
require_relative 'elements/slice'

module Diagrams
  class PieDiagram < Base
    attr_reader title: ::String
    attr_reader slices: ::Array[Elements::Slice]

    # Initializes a new PieDiagram.
    def initialize: (?title: ::String?, ?slices: ::Array[Elements::Slice]?, ?version: Integer | String?) -> void

    # Adds a slice to the diagram.
    def add_slice: (Elements::Slice slice) -> Elements::Slice

    # Finds a slice by its label.
    def find_slice: (::String label) -> Elements::Slice?

    # Calculates the current total percentage of all slices.
    def current_total: () -> ::Float

    # Returns the specific content of the pie diagram as a hash.
    def to_h_content: () -> { title: ::String, slices: ::Array[Hash[Symbol, untyped]] }

    # Class method to create a PieDiagram from a hash.
    def self.from_h: (Hash[Symbol | String, untyped] data_hash, version: Integer | String?, checksum: String?) -> PieDiagram

    private

    # Validates the consistency of slices during initialization.
    def validate_elements!: () -> void
  end
end
