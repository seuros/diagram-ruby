module Diagrams
  class GanttDiagram < Base
    attr_reader title: ::String
    attr_reader tasks: ::Array[Elements::Task]

    # Initializes a new GanttDiagram.
    def initialize: (?title: ::String?, ?tasks: ::Array[Elements::Task]?, ?version: Integer | String?) -> void

    # Adds a task to the diagram.
    def add_task: (Elements::Task task) -> Elements::Task

    # Finds a task by its ID.
    def find_task: (::String task_id) -> Elements::Task?

    # Returns the specific content of the Gantt diagram as a hash.
    def to_h_content: () -> { title: ::String, tasks: ::Array[Hash[Symbol, untyped]] }

    # Returns a hash mapping element types to their collections for diffing.
    def identifiable_elements: () -> { tasks: ::Array[Elements::Task] }

    # Class method to create a GanttDiagram from a hash.
    def self.from_h: (Hash[Symbol | String, untyped] data_hash, version: Integer | String?, checksum: String?) -> GanttDiagram

    private

    # Validates the consistency of tasks during initialization.
    def validate_elements!: () -> void
  end
end
