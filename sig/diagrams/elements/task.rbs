module Diagrams
  module Elements
    class Task < ::Dry::Struct
      include Diagrams::Elements::Types

      # Attributes
      # Type alias for status symbols
      type STATUS = :done | :active | :crit

      # Attributes
      attr_reader id: String       # Unique ID for dependencies
      attr_reader label: String    # Display name
      attr_reader status: STATUS?  # Task status (nil implies default/future)
      attr_reader start: String    # Start date, task ID, or 'after taskX[, taskY]'
      attr_reader duration: String # Duration string (e.g., '7d', '2w')

      # Methods
      def initialize: (id: String, label: String, start: String, duration: String, ?status: STATUS?) -> void
                     | (Hash[Symbol, untyped]) -> void # Allow hash initialization

      def to_h: () -> Hash[Symbol, String | Symbol | nil]
    end
  end
end